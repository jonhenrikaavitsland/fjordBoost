---
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import '../styles/global.css';

const { title, description, crawl } = Astro.props;
const canonicalUrl = new URL(Astro.url.pathname, Astro.site).href;
---

<html lang='en'>
  <head>
    <!-- Start cookieyes banner -->
    <script
      id='cookieyes'
      type='text/javascript'
      src='https://cdn-cookieyes.com/client_data/03da34dcde9362917f56d986/script.js'
    ></script>
    <!-- End cookieyes banner -->
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.png' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <link rel='canonical' href={canonicalUrl} />
    <title>{title} | FjordBoost</title>
    <meta name='description' content={description} />
    {crawl && <meta name='robots' content='noindex, follow' />}

    <!-- Matomo (with CookieYes consent) -->
    <script>
      // Matomo queue
      var _paq = (window._paq = window._paq || []);

      // Require consent BEFORE any tracking calls
      _paq.push(['requireConsent']);

      // Normal tracker calls (queued until matomo.js loads)
      _paq.push(['enableLinkTracking']);
      _paq.push(['trackPageView']);

      // Load Matomo
      (function () {
        var u = 'https://fjordboost.matomo.cloud/';
        _paq.push(['setTrackerUrl', u + 'matomo.php']);
        _paq.push(['setSiteId', '1']);

        var d = document,
          g = d.createElement('script'),
          s = d.getElementsByTagName('script')[0];
        g.async = true;
        g.src =
          'https://cdn.matomo.cloud/fjordboost.matomo.cloud/matomo.js';
        s.parentNode && s.parentNode.insertBefore(g, s);
      })();

      interface CookieYesConsentDetail {
        accepted: string[];
        // add other fields if CookieYes provides them
      }

      // CookieYes â†’ Matomo consent bridge
      function consentSet(data: CookieYesConsentDetail) {
        if (
          data &&
          Array.isArray(data.accepted) &&
          data.accepted.includes('analytics')
        ) {
          // Persist consent + apply immediately
          _paq.push(['rememberConsentGiven']);
          _paq.push(['setConsentGiven']);
        } else {
          _paq.push(['forgetConsentGiven']);
        }
      }

      // Listen for updates from CookieYes
      document.addEventListener('cookieyes_consent_update', ((
        event: CustomEvent<CookieYesConsentDetail>
      ) => {
        const data = event.detail;
        consentSet(data);
      }) as EventListener);

      // Optional: apply current consent state on load if CookieYes exposes it
      // (won't hurt if it's not available)
      document.addEventListener('DOMContentLoaded', function () {
        if (window.cookieyes && window.cookieyes.consent) {
          consentSet(window.cookieyes.consent);
        }
      });
    </script>
    <!-- End Matomo -->
  </head>
  <a href='#main' class='sr-only'> Skip to main content </a>
  <body class='flex flex-col min-h-screen scroll-smooth'>
    <Header />
    <main class='flex-grow' id='main'>
      <slot />
    </main>
    <Footer />
  </body>

  <script defer>
    const focusHash = () => {
      const id = location.hash.slice(1);
      if (!id) return;
      const el = document.getElementById(id);
      if (el) {
        el.setAttribute('tabindex', '-1');
        el.focus();
      }
    };
    window.addEventListener('hashchange', focusHash);
    window.addEventListener('DOMContentLoaded', focusHash);
  </script>
  <script defer>
    document.addEventListener('DOMContentLoaded', () => {
      const nav = document.querySelector('header details');
      if (!nav) return;
      nav.addEventListener('click', (e) => {
        const a = e.target.closest('a[href]');
        if (a) nav.open = false;
      });
    });
  </script>

</html>
